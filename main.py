# -*- coding: utf-8 -*-
"""first-neuronal-network.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MJDq6h5JgSF-jtN_nta0Wjo_DxqEFt6O
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

celsius = np.array([-40, -10, 0, 8, 15, 22, 38], dtype=float)
fahrenheit = np.array([-40, 14, 32, 46, 59, 72, 100], dtype=float)

layer = tf.keras.layers.Dense(units=1, input_shape=[1])
model = tf.keras.Sequential([layer])

model.compile(optimizer=tf.keras.optimizers.Adam(0.1), loss="mean_squared_error")

print("Start training...")
history = model.fit(celsius, fahrenheit, epochs=1000, verbose=False)
print("Model trained!")

plt.xlabel("# Epoca")
plt.ylabel("Magnitud de perdida")
plt.plot(history.history["loss"])

print("lets convert")
result = model.predict([100.0])
print(f"Result: {result} Fahrenheit!")
